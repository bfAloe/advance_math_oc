1. pol and rec functions
2. Expressions
3. cumsum

https://pub.dev/packages/vector_math

https://mathworld.wolfram.com/

The Matrix class provides various methods and extensions for working with matrices in Dart. 
Here is a summary of the available methods and extensions:

1. Constructors:
   - Matrix() (and its variants)
   - Matrix.arrange()
   - Matrix.eye()
   - Matrix.fill()
   - Matrix.fromDiagonal()
   - Matrix.fromList()
   - Matrix.linspace()
   - Matrix.ones()
   - Matrix.random()
   - Matrix.range()
   - Matrix.zeros()

2. Properties:
   - columnCount
   - rowCount
   - shape
   - diagonal
   - flatten
   - sum
   - transpose

3. Matrix Manipulation Extension methods:
   - appendColumns()
   - appendRows()
   - apply()
   - concatenate()
   - copy()
   - copyFrom()
   - elementAt()
   - flatten()
   - insertColumn()
   - insertRow()
   - removeColumn()
   - removeColumns()
   - removeRow()
   - removeRows()
   - replace()
   - reshape()
   - reshapeList()
   - reverse()
   - setColumn()
   - setRow()
   - slice()
   - sort()
   - split()
   - submatrix()
   - subset()
   - swapColumns()
   - swapRows()

4. Matrix Operation Extension methods:
   - abs()
   - containsIn()
   - determinant()
   - dot()
   - elementDivide()
   - elementMultiply()
   - elementWise()
   - gaussianElimination()
   - inverse()
   - isSubMatrix()
   - luDecomposition()
   - norm()
   - normalize()
   - notIn()
   - qrAlgorithm()
   - reciprocal()
   - round()
   - rref()
   - solve()
   - sum()
   - trace()
   - transpose()

5. Matrix Stats Extension methods:
   - covarianceMatrix()
   - kurtosis()
   - max()
   - mean()
   - median()
   - min()
   - pearsonCorrelationCoefficient()
   - rank()
   - rowEchelonForm()
   - skewness()
   - standardDeviation()
   - variance()

These methods and extensions provide a comprehensive set of functionalities for working with matrices in Dart, 
such as creating, modifying, performing operations, and calculating statistics.